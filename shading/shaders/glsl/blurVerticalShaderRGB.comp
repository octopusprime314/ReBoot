#version 430
uniform layout(rgba8) readonly image2D readTexture;
uniform layout(rgba8) writeonly image2D writeTexture;
uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);
layout (local_size_x = 16, local_size_y = 16) in;
 
void main() {
	
	ivec2 ID = ivec2(gl_GlobalInvocationID.xy);
	vec3 result = imageLoad(readTexture, ID).rgb * weight[0]; // current fragment's contribution
	
	for(int i = 1; i < 5; ++i)
	{
		result += imageLoad(readTexture, ivec2(ID.x, ID.y + i)).rgb * weight[i];
		result += imageLoad(readTexture, ivec2(ID.x, ID.y - i)).rgb * weight[i];
	}
	imageStore(writeTexture, ID, vec4(result.rgb, 1.0));
}